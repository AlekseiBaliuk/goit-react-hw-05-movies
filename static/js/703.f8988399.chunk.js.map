{"version":3,"file":"static/js/703.f8988399.chunk.js","mappings":"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","sources":["components/MoviesList/MoviesList.styled.jsx","components/MoviesList/MoviesList.jsx","components/SearchBar/SearchBar.styled.jsx","components/SearchBar/SearchBar.jsx","pages/Movies/Movies.jsx","services/fetchApi.js"],"sourcesContent":["import { NavLink } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const Link = styled(NavLink)`\n  color: black;\n  text-decoration: none;\n`;\n\nexport const Container = styled.div`\n  max-width: 1200px;\n  padding: 20px;\n`;\n\nexport const MoviesGallegy = styled.ul`\n  display: grid;\n  grid-template-columns: 1fr 1fr 1fr 1fr 1fr;\n  gap: 18px;\n  row-gap: 24px;\n`;\n\nexport const MovieItem = styled.li`\n  border: 1px solid #ccc;\n  border-radius: 4px;\n  transition: scale 250ms linear;\n  max-height: 380px;\n\n  &:hover {\n    scale: 1.1;\n  }\n`;\n\nexport const MovieName = styled.p`\n  font-size: 14px;\n  font-weight: 600;\n  max-width: 215px;\n  max-height: 43px;\n  padding: 12px 4px;\n`;\n","import { useLocation } from 'react-router-dom';\nimport {\n  MoviesGallegy,\n  Container,\n  MovieName,\n  MovieItem,\n  Link,\n} from './MoviesList.styled';\n\nexport const MoviesList = ({ movies }) => {\n  const location = useLocation();\n  const poster = poster_path => {\n    if (poster_path === null) {\n      return 'https://via.placeholder.com/300sx450.jpg';\n    }\n    return `https://image.tmdb.org/t/p/w300${poster_path}`;\n  };\n  return (\n    <Container>\n      <MoviesGallegy>\n        {movies.map(\n          ({ id, original_title, original_name, name, title, poster_path }) => (\n            <MovieItem key={id}>\n              <Link to={`/movies/${id}`} state={{ from: location }}>\n                <img\n                  src={`${poster(poster_path)}`}\n                  alt={`${title || original_title || name}`}\n                />\n                <MovieName>{original_title || original_name}</MovieName>\n              </Link>\n            </MovieItem>\n          )\n        )}\n      </MoviesGallegy>\n    </Container>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  width: 1200px;\n  padding: 0 20px;\n`;\n\nexport const Input = styled.input`\n  width: 400px;\n  margin-right: 12px;\n`;\n\nexport const Button = styled.button`\n  cursor: pointer;\n  background-color: coral;\n  border: 1px solid coral;\n  border-radius: 4px;\n  color: #fff;\n  transition: color 250ms linear, background-color 250ms linear;\n\n  &:hover {\n    color: coral;\n    background-color: #fff;\n  }\n`;\n","import { useState } from 'react';\nimport { Input, Container, Button } from './SearchBar.styled';\n\nexport const SearchBar = ({ onSubmit }) => {\n  const [movieName, setMovieName] = useState('');\n\n  const inputHandler = e => {\n    setMovieName(e.target.value.toLowerCase().trim());\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (movieName === '') {\n      console.log('enter something');\n      return;\n    }\n\n    onSubmit(movieName);\n    setMovieName('');\n  };\n\n  return (\n    <Container>\n      <form onSubmit={handleSubmit}>\n        <Input value={movieName} onChange={inputHandler} />\n        <Button type=\"submit\">Search</Button>\n      </form>\n    </Container>\n  );\n};\n","import { useEffect, useState } from 'react';\nimport { Outlet, useNavigate, useSearchParams } from 'react-router-dom';\nimport { SearchBar } from '../../components/SearchBar/SearchBar';\nimport { fetchMovieByName } from 'services/fetchApi';\nimport { MoviesList } from 'components/MoviesList/MoviesList';\n\nconst Movies = () => {\n  const [movies, setMovies] = useState([]);\n  const [error, setError] = useState(null);\n  const navigate = useNavigate();\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  const query = searchParams.get('query');\n\n  const handleFormSubmit = search => {\n    setSearchParams({ query: search });\n    setError(null);\n  };\n\n  useEffect(() => {\n    if (query === null) return;\n    async function getMovieById() {\n      try {\n        const movieData = await fetchMovieByName(query);\n        if (movieData.length === 0) {\n          console.log(`${query} not found`);\n        } else {\n          navigate(`/movies/?query=${query}`);\n        }\n        setMovies(movieData.results);\n      } catch (error) {\n        setError(error);\n      }\n    }\n    getMovieById();\n  }, [navigate, query]);\n\n  // const handleFormSubmit = async name => {\n  //   // if (query === '') return;\n\n  //   try {\n  //     const movieData = await fetchMovieByName(name);\n  //     if (movieData.length === 0) {\n  //       console.log(`${name} not found`);\n  //       return;\n  //     }\n  //     if (movieData.length !== 0) {\n  //       navigate(`/movies/?query=${name}`);\n  //     }\n  //     setMovies(movieData.results);\n  //   } catch (error) {\n  //     setError(error);\n  //   }\n  // };\n\n  // const updateQueryString = name => {\n  //   const nextParams = name !== '' ? { name } : {};\n  //   setSearchParams(nextParams);\n  // };\n\n  return (\n    <main>\n      {error && <p>Try again</p>}\n      <SearchBar onSubmit={handleFormSubmit} />\n\n      {movies && <MoviesList movies={movies} />}\n\n      <Outlet />\n    </main>\n  );\n};\nexport default Movies;\n","import axios from 'axios';\n\nconst APY_KEY = '0214e4f6556edfc65f2eadfc23b43510';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nexport async function fetchTrendingMovies() {\n  const params = {\n    api_key: APY_KEY,\n    language: 'en-US',\n  };\n\n  const response = await axios.get('/trending/all/day', { params });\n  const data = response.data;\n\n  return data;\n}\n\nexport async function fetchMovieById(movieId) {\n  const params = {\n    api_key: APY_KEY,\n    language: 'en-US',\n  };\n\n  const response = await axios.get(`/movie/${movieId}`, { params });\n  const data = response.data;\n\n  return data;\n}\n\nexport async function fetchMovieByName(movieName) {\n  const params = {\n    api_key: APY_KEY,\n    language: 'en-US',\n    query: movieName,\n  };\n\n  const response = await axios.get(`/search/movie/`, { params });\n  const data = response.data;\n\n  return data;\n}\n\nexport async function fetchCast(movieId) {\n  const params = {\n    api_key: APY_KEY,\n    language: 'en-US',\n  };\n\n  const response = await axios.get(`/movie/${movieId}/credits`, { params });\n  const data = response.data;\n\n  return data;\n}\n\nexport async function fetchReviews(movieId) {\n  const params = {\n    api_key: APY_KEY,\n    language: 'en-US',\n  };\n\n  const response = await axios.get(`/movie/${movieId}/reviews`, { params });\n  const data = response.data;\n\n  return data;\n}\n"],"names":["Link","styled","NavLink","Container","MoviesGallegy","MovieItem","MovieName","MoviesList","movies","location","useLocation","poster","poster_path","map","id","original_title","original_name","name","title","to","state","from","src","alt","Input","Button","SearchBar","onSubmit","useState","movieName","setMovieName","e","preventDefault","console","log","value","onChange","target","toLowerCase","trim","type","setMovies","error","setError","navigate","useNavigate","useSearchParams","searchParams","setSearchParams","query","get","useEffect","fetchMovieByName","movieData","length","results","getMovieById","search","APY_KEY","fetchTrendingMovies","params","api_key","language","axios","response","data","fetchMovieById","movieId","fetchCast","fetchReviews"],"sourceRoot":""}